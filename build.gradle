// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    
    repositories {
        jcenter()
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.0'
        classpath 'org.javassist:javassist:3.20.0-GA'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        jcenter()
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
    }
}

ext {
    targetSdkVersion = 25
    compileSdkVersion = 25
    minSdkVersion = 15
    buildToolsVersion = "23.0.2"
    v7SupportLib = "com.android.support:appcompat-v7:25.1.0"
    gradleAndroidPlugin = "com.android.tools.build:gradle:2.2.0"

    // 要修复的类的类名
    fixedClassName = "com.lilong.hotfixdemo.fixed.Util"
    // 要修复的类的方法的方法名
    fixedClassMethodName = "showToast"
    // 修复成的方法体
    fixedClassMethodBody = "android.widget.Toast.makeText(com.lilong.hotfixdemo.application.DemoApplication.getInstance(), \"This is a good method\", android.widget.Toast.LENGTH_SHORT).show();"

    // 原始的所有类的class文件
    allClassesDirAbsPath = String.join(File.separator, rootProject.findProject(":app").projectDir.absolutePath, "build", "intermediates", "classes", "debug")

    // 修复后的class所在目录
    fixedClassesDirAbsPath = String.join(File.separator, rootProject.findProject(":app").projectDir.absolutePath, "fixedClass")

    // 补丁dex的名字
    fixedDexName = "fixed.dex"
    // 生成的补丁dex放到assets目录下
    fixedDexDirAbsPath = String.join(File.separator, rootProject.findProject(":app").projectDir.absolutePath, "src", "main", "assets")
    // 生成的补丁dex的路径
    fixedDexAbsPath = String.join(File.separator, fixedDexDirAbsPath, fixedDexName)
}
